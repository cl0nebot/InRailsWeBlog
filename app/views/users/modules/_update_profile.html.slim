/ Login parameters
h4
  = t('views.user.edit.login_header')

.row
  / Pseudo: disabled (login parameter)
  .col.s6
    = user_form.input :pseudo, label: t('user.id'), icon: 'account_circle', disabled: true

  / Email: disabled (login parameter)
  .col.s6
    = user_form.input :email, label: t('user.email'), icon: 'mail', disabled: true

  .center-align
    = link_to t('views.user.edit.connection_parameters'), edit_user_registration_path(user)

/ User picture
h4.margin-top-30
  = t('views.user.edit.profile_picture')

.row
  = user_form.fields_for :picture do |picture|
    .col.s12
      - if !picture.object.new_record?
        p.margin-bottom-10
          = t('views.user.edit.current_picture')
        = image_tag(picture.object.image.url(:thumb))
        = picture.input :_destroy, wrapper: :materialize_checkbox, label: t('views.user.edit.remove_picture')
        p
          = t('views.user.edit.replace_picture')
      - else
        p
          = t('views.user.edit.no_picture')
    .col.s12.m5
      = picture.input :image, wrapper: :materialize_file_input, file_label: t('user.local_picture'), file_field_label: t('views.user.edit.placeholder_picture')
    .col.s12.m1.center-align
      span
        = t('support.or')
    .col.s12.m6
      = picture.input :remote_image_url, label: t('user.remote_picture')


/ Personal information
h4.margin-top-30
  = t('views.user.edit.personal_information_header')

.row
  / First name
  .col.s6
    = user_form.input :first_name, label: t('user.first_name'), icon: 'account_circle', autofocus: true

  / Last name
  .col.s6
    = user_form.input :last_name, label: t('user.last_name'), icon: 'account_circle'

.row
  / Address
  .col.s6
    = user_form.input :city, label: t('user.city'), icon: 'location_city'


  / Country
  .col.s6
    = user_form.input :country, as: :country, priority: ['France']

/ Additional info
.row
  .col.s12
    = user_form.input :additional_info, as: :text, wrapper: :materialize_textarea, label: t('user.additional_info')
